Nonterminals useless in grammar

    UnaryOp


Terminals unused in grammar

    LOP_MODEEQ
    BOOL
    LOP_LBRKET
    LOP_RBRKET
    LOP_EQ


Rules useless in grammar

  114 UnaryOp: LOP_PLUS
  115        | LOP_MINUS
  116        | LOP_NOT


State 185 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: CompUnits

    2 CompUnits: CompUnit
    3          | CompUnits CompUnit

    4 CompUnit: decl SEMICOLON
    5         | funcdef

    6 decl: vardeclstmt
    7     | constdeclstmt
    8     | structdeclstmt

    9 constdeclstmt: KEY_CONST T constdefitem
   10              | constdeclstmt LOP_COMMA constdefitem

   11 constdefitem: IDENTIFIER LOP_ASSIGN constinitval

   12 constinitval: LorExp

   13 vardeclstmt: T declareitem
   14            | vardeclstmt LOP_COMMA declareitem

   15 declareitem: IDENTIFIER LOP_ASSIGN expr
   16            | IDENTIFIER

   17 assignstmt: LValExp LOP_ASSIGN LorExp
   18           | LValExp AssignEqOp LorExp

   19 funcdef: T IDENTIFIER LOP_LPAREN funcparams LOP_RPAREN block
   20        | T_VOID IDENTIFIER LOP_LPAREN funcparams LOP_RPAREN block

   21 funcparams: funcparam
   22           | funcparams LOP_COMMA funcparam
   23           | %empty

   24 funcparam: T IDENTIFIER

   25 block: LOP_LBRACE blocklist LOP_RBRACE

   26 blocklist: decl SEMICOLON
   27          | statement
   28          | blocklist decl SEMICOLON
   29          | blocklist statement

   30 statement: SEMICOLON
   31          | block
   32          | ifstmt
   33          | forstmt
   34          | whilestmt
   35          | returnstmt SEMICOLON
   36          | KEY_BREAK SEMICOLON
   37          | KEY_CONTINUE SEMICOLON
   38          | assignstmt SEMICOLON
   39          | funccall

   40 funccall: scanfstmt SEMICOLON
   41         | printfstmt SEMICOLON

   42 scanfstmt: KEY_SCANF LOP_LPAREN STRING LOP_COMMA spflist LOP_RPAREN

   43 printfstmt: KEY_PRINTF LOP_LPAREN STRING LOP_COMMA spflist LOP_RPAREN

   44 spflist: expr
   45        | spflist LOP_COMMA expr

   46 forstmt: KEY_FOR LOP_LPAREN vardeclstmt SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN statement
   47        | KEY_FOR LOP_LPAREN assignstmt SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN statement

   48 returnstmt: KEY_RETURN
   49           | KEY_RETURN CommaExp

   50 whilestmt: KEY_WHILE LOP_LPAREN CommaExp LOP_RPAREN statement

   51 ifstmt: KEY_IF LOP_LPAREN CommaExp LOP_RPAREN statement
   52       | KEY_IF LOP_LPAREN CommaExp LOP_RPAREN statement KEY_ELSE statement

   53 expr: LorExp

   54 PrimaryExp: IDENTIFIER
   55           | IDENTIFIER LOP_POINT IDENTIFIER
   56           | INTEGER
   57           | CHAR
   58           | STRING

   59 LValExp: IDENTIFIER
   60        | IDENTIFIER LOP_POINT IDENTIFIER

   61 UnaryExp: PrimaryExp
   62         | LOP_PLUS UnaryExp
   63         | LOP_MINUS UnaryExp
   64         | LOP_NOT UnaryExp

   65 MulExp: UnaryExp
   66       | MulExp MulOp UnaryExp

   67 AddExp: MulExp
   68       | AddExp LOP_PLUS MulExp
   69       | AddExp LOP_MINUS MulExp

   70 RelExp: AddExp
   71       | RelExp RelOp AddExp

   72 EqExp: RelExp
   73      | EqExp EqOp RelExp

   74 LandExp: EqExp
   75        | LandExp LOP_LAND EqExp

   76 LorExp: LandExp
   77       | LorExp LOP_LOR LandExp

   78 CommaExp: LorExp
   79         | CommaExp LOP_COMMA LorExp

   80 INTEGER: HEX_INTEGER
   81        | DEC_INTEGER
   82        | OCT_INTEGER

   83 structdeclstmt: KEY_STRUCT IDENTIFIER LOP_LBRACE structdeclist LOP_RBRACE structinitlist

   84 structdeclist: structdecitem
   85              | structdeclist structdecitem

   86 structdecitem: decl SEMICOLON
   87              | funcdef SEMICOLON
   88              | AutT decl SEMICOLON
   89              | AutT funcdef SEMICOLON

   90 structinitlist: structinititem
   91               | structinitlist LOP_COMMA structinititem

   92 structinititem: IDENTIFIER
   93               | %empty

   94 T: T_INT
   95  | T_CHAR
   96  | T_BOOL
   97  | T_STRING

   98 AutT: KEY_PUBLIC
   99     | KEY_PRIVATE

  100 MulOp: LOP_MUL
  101      | LOP_DIV
  102      | LOP_MOD

  103 RelOp: LOP_LESS
  104      | LOP_GREA
  105      | LOP_LE
  106      | LOP_GE

  107 EqOp: LOP_EEQ
  108     | LOP_NEQ

  109 AssignEqOp: LOP_PLUSEQ
  110           | LOP_MINUSEQ
  111           | LOP_MODEQ
  112           | LOP_MULEQ
  113           | LOP_DIVEQ


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_CHAR (258) 95
    T_INT (259) 94
    T_STRING (260) 97
    T_BOOL (261) 96
    T_VOID (262) 20
    KEY_IF (263) 51 52
    KEY_ELSE (264) 52
    KEY_FOR (265) 46 47
    KEY_WHILE (266) 50
    KEY_CONTINUE (267) 37
    KEY_BREAK (268) 36
    KEY_RETURN (269) 48 49
    KEY_SCANF (270) 42
    KEY_PRINTF (271) 43
    KEY_CONST (272) 9
    KEY_STRUCT (273) 83
    KEY_PUBLIC (274) 98
    KEY_PRIVATE (275) 99
    LOP_POINT (276) 55 60
    LOP_MINUS (277) 63 69
    LOP_PLUS (278) 62 68
    LOP_NOT (279) 64
    LOP_MUL (280) 100
    LOP_DIV (281) 101
    LOP_MOD (282) 102
    LOP_LESS (283) 103
    LOP_GREA (284) 104
    LOP_LE (285) 105
    LOP_GE (286) 106
    LOP_EEQ (287) 107
    LOP_NEQ (288) 108
    LOP_LAND (289) 75
    LOP_LOR (290) 77
    LOP_ASSIGN (291) 11 15 17
    LOP_PLUSEQ (292) 109
    LOP_MINUSEQ (293) 110
    LOP_MODEEQ (294)
    LOP_MULEQ (295) 112
    LOP_DIVEQ (296) 113
    LOP_COMMA (297) 10 14 22 42 43 45 79 91
    LOP_LPAREN (298) 19 20 42 43 46 47 50 51 52
    LOP_RPAREN (299) 19 20 42 43 46 47 50 51 52
    LOP_LBRACE (300) 25 83
    LOP_RBRACE (301) 25 83
    SEMICOLON (302) 4 26 28 30 35 36 37 38 40 41 46 47 86 87 88 89
    IDENTIFIER (303) 11 15 16 19 20 24 54 55 59 60 83 92
    HEX_INTEGER (304) 80
    DEC_INTEGER (305) 81
    OCT_INTEGER (306) 82
    CHAR (307) 57
    BOOL (308)
    STRING (309) 42 43 58
    LOP_LBRKET (310)
    LOP_RBRKET (311)
    LOP_UMINUS (312)
    LOP_UPLUS (313)
    LOP_EQ (314)
    LOP_MODEQ (315) 111


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    Program (62)
        on left: 1
        on right: 0
    CompUnits (63)
        on left: 2 3
        on right: 1 3
    CompUnit (64)
        on left: 4 5
        on right: 2 3
    decl (65)
        on left: 6 7 8
        on right: 4 26 28 86 88
    constdeclstmt (66)
        on left: 9 10
        on right: 7 10
    constdefitem (67)
        on left: 11
        on right: 9 10
    constinitval (68)
        on left: 12
        on right: 11
    vardeclstmt (69)
        on left: 13 14
        on right: 6 14 46
    declareitem (70)
        on left: 15 16
        on right: 13 14
    assignstmt (71)
        on left: 17 18
        on right: 38 46 47
    funcdef (72)
        on left: 19 20
        on right: 5 87 89
    funcparams (73)
        on left: 21 22 23
        on right: 19 20 22
    funcparam (74)
        on left: 24
        on right: 21 22
    block (75)
        on left: 25
        on right: 19 20 31
    blocklist (76)
        on left: 26 27 28 29
        on right: 25 28 29
    statement (77)
        on left: 30 31 32 33 34 35 36 37 38 39
        on right: 27 29 46 47 50 51 52
    funccall (78)
        on left: 40 41
        on right: 39
    scanfstmt (79)
        on left: 42
        on right: 40
    printfstmt (80)
        on left: 43
        on right: 41
    spflist (81)
        on left: 44 45
        on right: 42 43 45
    forstmt (82)
        on left: 46 47
        on right: 33
    returnstmt (83)
        on left: 48 49
        on right: 35
    whilestmt (84)
        on left: 50
        on right: 34
    ifstmt (85)
        on left: 51 52
        on right: 32
    expr (86)
        on left: 53
        on right: 15 44 45
    PrimaryExp (87)
        on left: 54 55 56 57 58
        on right: 61
    LValExp (88)
        on left: 59 60
        on right: 17 18
    UnaryExp (89)
        on left: 61 62 63 64
        on right: 62 63 64 65 66
    MulExp (90)
        on left: 65 66
        on right: 66 67 68 69
    AddExp (91)
        on left: 67 68 69
        on right: 68 69 70 71
    RelExp (92)
        on left: 70 71
        on right: 71 72 73
    EqExp (93)
        on left: 72 73
        on right: 73 74 75
    LandExp (94)
        on left: 74 75
        on right: 75 76 77
    LorExp (95)
        on left: 76 77
        on right: 12 17 18 53 77 78 79
    CommaExp (96)
        on left: 78 79
        on right: 46 47 49 50 51 52 79
    INTEGER (97)
        on left: 80 81 82
        on right: 56
    structdeclstmt (98)
        on left: 83
        on right: 8
    structdeclist (99)
        on left: 84 85
        on right: 83 85
    structdecitem (100)
        on left: 86 87 88 89
        on right: 84 85
    structinitlist (101)
        on left: 90 91
        on right: 83 91
    structinititem (102)
        on left: 92 93
        on right: 90 91
    T (103)
        on left: 94 95 96 97
        on right: 9 13 19 24
    AutT (104)
        on left: 98 99
        on right: 88 89
    MulOp (105)
        on left: 100 101 102
        on right: 66
    RelOp (106)
        on left: 103 104 105 106
        on right: 71
    EqOp (107)
        on left: 107 108
        on right: 73
    AssignEqOp (108)
        on left: 109 110 111 112 113
        on right: 18


State 0

    0 $accept: . Program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    KEY_CONST   shift, and go to state 6
    KEY_STRUCT  shift, and go to state 7

    Program         go to state 8
    CompUnits       go to state 9
    CompUnit        go to state 10
    decl            go to state 11
    constdeclstmt   go to state 12
    vardeclstmt     go to state 13
    funcdef         go to state 14
    structdeclstmt  go to state 15
    T               go to state 16


State 1

   95 T: T_CHAR .

    $default  reduce using rule 95 (T)


State 2

   94 T: T_INT .

    $default  reduce using rule 94 (T)


State 3

   97 T: T_STRING .

    $default  reduce using rule 97 (T)


State 4

   96 T: T_BOOL .

    $default  reduce using rule 96 (T)


State 5

   20 funcdef: T_VOID . IDENTIFIER LOP_LPAREN funcparams LOP_RPAREN block

    IDENTIFIER  shift, and go to state 17


State 6

    9 constdeclstmt: KEY_CONST . T constdefitem

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4

    T  go to state 18


State 7

   83 structdeclstmt: KEY_STRUCT . IDENTIFIER LOP_LBRACE structdeclist LOP_RBRACE structinitlist

    IDENTIFIER  shift, and go to state 19


State 8

    0 $accept: Program . $end

    $end  shift, and go to state 20


State 9

    1 Program: CompUnits .
    3 CompUnits: CompUnits . CompUnit

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    KEY_CONST   shift, and go to state 6
    KEY_STRUCT  shift, and go to state 7

    $default  reduce using rule 1 (Program)

    CompUnit        go to state 21
    decl            go to state 11
    constdeclstmt   go to state 12
    vardeclstmt     go to state 13
    funcdef         go to state 14
    structdeclstmt  go to state 15
    T               go to state 16


State 10

    2 CompUnits: CompUnit .

    $default  reduce using rule 2 (CompUnits)


State 11

    4 CompUnit: decl . SEMICOLON

    SEMICOLON  shift, and go to state 22


State 12

    7 decl: constdeclstmt .
   10 constdeclstmt: constdeclstmt . LOP_COMMA constdefitem

    LOP_COMMA  shift, and go to state 23

    $default  reduce using rule 7 (decl)


State 13

    6 decl: vardeclstmt .
   14 vardeclstmt: vardeclstmt . LOP_COMMA declareitem

    LOP_COMMA  shift, and go to state 24

    $default  reduce using rule 6 (decl)


State 14

    5 CompUnit: funcdef .

    $default  reduce using rule 5 (CompUnit)


State 15

    8 decl: structdeclstmt .

    $default  reduce using rule 8 (decl)


State 16

   13 vardeclstmt: T . declareitem
   19 funcdef: T . IDENTIFIER LOP_LPAREN funcparams LOP_RPAREN block

    IDENTIFIER  shift, and go to state 25

    declareitem  go to state 26


State 17

   20 funcdef: T_VOID IDENTIFIER . LOP_LPAREN funcparams LOP_RPAREN block

    LOP_LPAREN  shift, and go to state 27


State 18

    9 constdeclstmt: KEY_CONST T . constdefitem

    IDENTIFIER  shift, and go to state 28

    constdefitem  go to state 29


State 19

   83 structdeclstmt: KEY_STRUCT IDENTIFIER . LOP_LBRACE structdeclist LOP_RBRACE structinitlist

    LOP_LBRACE  shift, and go to state 30


State 20

    0 $accept: Program $end .

    $default  accept


State 21

    3 CompUnits: CompUnits CompUnit .

    $default  reduce using rule 3 (CompUnits)


State 22

    4 CompUnit: decl SEMICOLON .

    $default  reduce using rule 4 (CompUnit)


State 23

   10 constdeclstmt: constdeclstmt LOP_COMMA . constdefitem

    IDENTIFIER  shift, and go to state 28

    constdefitem  go to state 31


State 24

   14 vardeclstmt: vardeclstmt LOP_COMMA . declareitem

    IDENTIFIER  shift, and go to state 32

    declareitem  go to state 33


State 25

   15 declareitem: IDENTIFIER . LOP_ASSIGN expr
   16            | IDENTIFIER .
   19 funcdef: T IDENTIFIER . LOP_LPAREN funcparams LOP_RPAREN block

    LOP_ASSIGN  shift, and go to state 34
    LOP_LPAREN  shift, and go to state 35

    $default  reduce using rule 16 (declareitem)


State 26

   13 vardeclstmt: T declareitem .

    $default  reduce using rule 13 (vardeclstmt)


State 27

   20 funcdef: T_VOID IDENTIFIER LOP_LPAREN . funcparams LOP_RPAREN block

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4

    $default  reduce using rule 23 (funcparams)

    funcparams  go to state 36
    funcparam   go to state 37
    T           go to state 38


State 28

   11 constdefitem: IDENTIFIER . LOP_ASSIGN constinitval

    LOP_ASSIGN  shift, and go to state 39


State 29

    9 constdeclstmt: KEY_CONST T constdefitem .

    $default  reduce using rule 9 (constdeclstmt)


State 30

   83 structdeclstmt: KEY_STRUCT IDENTIFIER LOP_LBRACE . structdeclist LOP_RBRACE structinitlist

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    KEY_CONST    shift, and go to state 6
    KEY_STRUCT   shift, and go to state 7
    KEY_PUBLIC   shift, and go to state 40
    KEY_PRIVATE  shift, and go to state 41

    decl            go to state 42
    constdeclstmt   go to state 12
    vardeclstmt     go to state 13
    funcdef         go to state 43
    structdeclstmt  go to state 15
    structdeclist   go to state 44
    structdecitem   go to state 45
    T               go to state 16
    AutT            go to state 46


State 31

   10 constdeclstmt: constdeclstmt LOP_COMMA constdefitem .

    $default  reduce using rule 10 (constdeclstmt)


State 32

   15 declareitem: IDENTIFIER . LOP_ASSIGN expr
   16            | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 34

    $default  reduce using rule 16 (declareitem)


State 33

   14 vardeclstmt: vardeclstmt LOP_COMMA declareitem .

    $default  reduce using rule 14 (vardeclstmt)


State 34

   15 declareitem: IDENTIFIER LOP_ASSIGN . expr

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    expr        go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 64
    INTEGER     go to state 65


State 35

   19 funcdef: T IDENTIFIER LOP_LPAREN . funcparams LOP_RPAREN block

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4

    $default  reduce using rule 23 (funcparams)

    funcparams  go to state 66
    funcparam   go to state 37
    T           go to state 38


State 36

   20 funcdef: T_VOID IDENTIFIER LOP_LPAREN funcparams . LOP_RPAREN block
   22 funcparams: funcparams . LOP_COMMA funcparam

    LOP_COMMA   shift, and go to state 67
    LOP_RPAREN  shift, and go to state 68


State 37

   21 funcparams: funcparam .

    $default  reduce using rule 21 (funcparams)


State 38

   24 funcparam: T . IDENTIFIER

    IDENTIFIER  shift, and go to state 69


State 39

   11 constdefitem: IDENTIFIER LOP_ASSIGN . constinitval

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    constinitval  go to state 70
    PrimaryExp    go to state 57
    UnaryExp      go to state 58
    MulExp        go to state 59
    AddExp        go to state 60
    RelExp        go to state 61
    EqExp         go to state 62
    LandExp       go to state 63
    LorExp        go to state 71
    INTEGER       go to state 65


State 40

   98 AutT: KEY_PUBLIC .

    $default  reduce using rule 98 (AutT)


State 41

   99 AutT: KEY_PRIVATE .

    $default  reduce using rule 99 (AutT)


State 42

   86 structdecitem: decl . SEMICOLON

    SEMICOLON  shift, and go to state 72


State 43

   87 structdecitem: funcdef . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 44

   83 structdeclstmt: KEY_STRUCT IDENTIFIER LOP_LBRACE structdeclist . LOP_RBRACE structinitlist
   85 structdeclist: structdeclist . structdecitem

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_STRING     shift, and go to state 3
    T_BOOL       shift, and go to state 4
    T_VOID       shift, and go to state 5
    KEY_CONST    shift, and go to state 6
    KEY_STRUCT   shift, and go to state 7
    KEY_PUBLIC   shift, and go to state 40
    KEY_PRIVATE  shift, and go to state 41
    LOP_RBRACE   shift, and go to state 74

    decl            go to state 42
    constdeclstmt   go to state 12
    vardeclstmt     go to state 13
    funcdef         go to state 43
    structdeclstmt  go to state 15
    structdecitem   go to state 75
    T               go to state 16
    AutT            go to state 46


State 45

   84 structdeclist: structdecitem .

    $default  reduce using rule 84 (structdeclist)


State 46

   88 structdecitem: AutT . decl SEMICOLON
   89              | AutT . funcdef SEMICOLON

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    KEY_CONST   shift, and go to state 6
    KEY_STRUCT  shift, and go to state 7

    decl            go to state 76
    constdeclstmt   go to state 12
    vardeclstmt     go to state 13
    funcdef         go to state 77
    structdeclstmt  go to state 15
    T               go to state 16


State 47

   63 UnaryExp: LOP_MINUS . UnaryExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 78
    INTEGER     go to state 65


State 48

   62 UnaryExp: LOP_PLUS . UnaryExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 79
    INTEGER     go to state 65


State 49

   64 UnaryExp: LOP_NOT . UnaryExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 80
    INTEGER     go to state 65


State 50

   54 PrimaryExp: IDENTIFIER .
   55           | IDENTIFIER . LOP_POINT IDENTIFIER

    LOP_POINT  shift, and go to state 81

    $default  reduce using rule 54 (PrimaryExp)


State 51

   80 INTEGER: HEX_INTEGER .

    $default  reduce using rule 80 (INTEGER)


State 52

   81 INTEGER: DEC_INTEGER .

    $default  reduce using rule 81 (INTEGER)


State 53

   82 INTEGER: OCT_INTEGER .

    $default  reduce using rule 82 (INTEGER)


State 54

   57 PrimaryExp: CHAR .

    $default  reduce using rule 57 (PrimaryExp)


State 55

   58 PrimaryExp: STRING .

    $default  reduce using rule 58 (PrimaryExp)


State 56

   15 declareitem: IDENTIFIER LOP_ASSIGN expr .

    $default  reduce using rule 15 (declareitem)


State 57

   61 UnaryExp: PrimaryExp .

    $default  reduce using rule 61 (UnaryExp)


State 58

   65 MulExp: UnaryExp .

    $default  reduce using rule 65 (MulExp)


State 59

   66 MulExp: MulExp . MulOp UnaryExp
   67 AddExp: MulExp .

    LOP_MUL  shift, and go to state 82
    LOP_DIV  shift, and go to state 83
    LOP_MOD  shift, and go to state 84

    $default  reduce using rule 67 (AddExp)

    MulOp  go to state 85


State 60

   68 AddExp: AddExp . LOP_PLUS MulExp
   69       | AddExp . LOP_MINUS MulExp
   70 RelExp: AddExp .

    LOP_MINUS  shift, and go to state 86
    LOP_PLUS   shift, and go to state 87

    $default  reduce using rule 70 (RelExp)


State 61

   71 RelExp: RelExp . RelOp AddExp
   72 EqExp: RelExp .

    LOP_LESS  shift, and go to state 88
    LOP_GREA  shift, and go to state 89
    LOP_LE    shift, and go to state 90
    LOP_GE    shift, and go to state 91

    $default  reduce using rule 72 (EqExp)

    RelOp  go to state 92


State 62

   73 EqExp: EqExp . EqOp RelExp
   74 LandExp: EqExp .

    LOP_EEQ  shift, and go to state 93
    LOP_NEQ  shift, and go to state 94

    $default  reduce using rule 74 (LandExp)

    EqOp  go to state 95


State 63

   75 LandExp: LandExp . LOP_LAND EqExp
   76 LorExp: LandExp .

    LOP_LAND  shift, and go to state 96

    $default  reduce using rule 76 (LorExp)


State 64

   53 expr: LorExp .
   77 LorExp: LorExp . LOP_LOR LandExp

    LOP_LOR  shift, and go to state 97

    $default  reduce using rule 53 (expr)


State 65

   56 PrimaryExp: INTEGER .

    $default  reduce using rule 56 (PrimaryExp)


State 66

   19 funcdef: T IDENTIFIER LOP_LPAREN funcparams . LOP_RPAREN block
   22 funcparams: funcparams . LOP_COMMA funcparam

    LOP_COMMA   shift, and go to state 67
    LOP_RPAREN  shift, and go to state 98


State 67

   22 funcparams: funcparams LOP_COMMA . funcparam

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4

    funcparam  go to state 99
    T          go to state 38


State 68

   20 funcdef: T_VOID IDENTIFIER LOP_LPAREN funcparams LOP_RPAREN . block

    LOP_LBRACE  shift, and go to state 100

    block  go to state 101


State 69

   24 funcparam: T IDENTIFIER .

    $default  reduce using rule 24 (funcparam)


State 70

   11 constdefitem: IDENTIFIER LOP_ASSIGN constinitval .

    $default  reduce using rule 11 (constdefitem)


State 71

   12 constinitval: LorExp .
   77 LorExp: LorExp . LOP_LOR LandExp

    LOP_LOR  shift, and go to state 97

    $default  reduce using rule 12 (constinitval)


State 72

   86 structdecitem: decl SEMICOLON .

    $default  reduce using rule 86 (structdecitem)


State 73

   87 structdecitem: funcdef SEMICOLON .

    $default  reduce using rule 87 (structdecitem)


State 74

   83 structdeclstmt: KEY_STRUCT IDENTIFIER LOP_LBRACE structdeclist LOP_RBRACE . structinitlist

    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 93 (structinititem)

    structinitlist  go to state 103
    structinititem  go to state 104


State 75

   85 structdeclist: structdeclist structdecitem .

    $default  reduce using rule 85 (structdeclist)


State 76

   88 structdecitem: AutT decl . SEMICOLON

    SEMICOLON  shift, and go to state 105


State 77

   89 structdecitem: AutT funcdef . SEMICOLON

    SEMICOLON  shift, and go to state 106


State 78

   63 UnaryExp: LOP_MINUS UnaryExp .

    $default  reduce using rule 63 (UnaryExp)


State 79

   62 UnaryExp: LOP_PLUS UnaryExp .

    $default  reduce using rule 62 (UnaryExp)


State 80

   64 UnaryExp: LOP_NOT UnaryExp .

    $default  reduce using rule 64 (UnaryExp)


State 81

   55 PrimaryExp: IDENTIFIER LOP_POINT . IDENTIFIER

    IDENTIFIER  shift, and go to state 107


State 82

  100 MulOp: LOP_MUL .

    $default  reduce using rule 100 (MulOp)


State 83

  101 MulOp: LOP_DIV .

    $default  reduce using rule 101 (MulOp)


State 84

  102 MulOp: LOP_MOD .

    $default  reduce using rule 102 (MulOp)


State 85

   66 MulExp: MulExp MulOp . UnaryExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 108
    INTEGER     go to state 65


State 86

   69 AddExp: AddExp LOP_MINUS . MulExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 109
    INTEGER     go to state 65


State 87

   68 AddExp: AddExp LOP_PLUS . MulExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 110
    INTEGER     go to state 65


State 88

  103 RelOp: LOP_LESS .

    $default  reduce using rule 103 (RelOp)


State 89

  104 RelOp: LOP_GREA .

    $default  reduce using rule 104 (RelOp)


State 90

  105 RelOp: LOP_LE .

    $default  reduce using rule 105 (RelOp)


State 91

  106 RelOp: LOP_GE .

    $default  reduce using rule 106 (RelOp)


State 92

   71 RelExp: RelExp RelOp . AddExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 111
    INTEGER     go to state 65


State 93

  107 EqOp: LOP_EEQ .

    $default  reduce using rule 107 (EqOp)


State 94

  108 EqOp: LOP_NEQ .

    $default  reduce using rule 108 (EqOp)


State 95

   73 EqExp: EqExp EqOp . RelExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 112
    INTEGER     go to state 65


State 96

   75 LandExp: LandExp LOP_LAND . EqExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 113
    INTEGER     go to state 65


State 97

   77 LorExp: LorExp LOP_LOR . LandExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 114
    INTEGER     go to state 65


State 98

   19 funcdef: T IDENTIFIER LOP_LPAREN funcparams LOP_RPAREN . block

    LOP_LBRACE  shift, and go to state 100

    block  go to state 115


State 99

   22 funcparams: funcparams LOP_COMMA funcparam .

    $default  reduce using rule 22 (funcparams)


State 100

   25 block: LOP_LBRACE . blocklist LOP_RBRACE

    T_CHAR        shift, and go to state 1
    T_INT         shift, and go to state 2
    T_STRING      shift, and go to state 3
    T_BOOL        shift, and go to state 4
    KEY_IF        shift, and go to state 116
    KEY_FOR       shift, and go to state 117
    KEY_WHILE     shift, and go to state 118
    KEY_CONTINUE  shift, and go to state 119
    KEY_BREAK     shift, and go to state 120
    KEY_RETURN    shift, and go to state 121
    KEY_SCANF     shift, and go to state 122
    KEY_PRINTF    shift, and go to state 123
    KEY_CONST     shift, and go to state 6
    KEY_STRUCT    shift, and go to state 7
    LOP_LBRACE    shift, and go to state 100
    SEMICOLON     shift, and go to state 124
    IDENTIFIER    shift, and go to state 125

    decl            go to state 126
    constdeclstmt   go to state 12
    vardeclstmt     go to state 13
    assignstmt      go to state 127
    block           go to state 128
    blocklist       go to state 129
    statement       go to state 130
    funccall        go to state 131
    scanfstmt       go to state 132
    printfstmt      go to state 133
    forstmt         go to state 134
    returnstmt      go to state 135
    whilestmt       go to state 136
    ifstmt          go to state 137
    LValExp         go to state 138
    structdeclstmt  go to state 15
    T               go to state 139


State 101

   20 funcdef: T_VOID IDENTIFIER LOP_LPAREN funcparams LOP_RPAREN block .

    $default  reduce using rule 20 (funcdef)


State 102

   92 structinititem: IDENTIFIER .

    $default  reduce using rule 92 (structinititem)


State 103

   83 structdeclstmt: KEY_STRUCT IDENTIFIER LOP_LBRACE structdeclist LOP_RBRACE structinitlist .
   91 structinitlist: structinitlist . LOP_COMMA structinititem

    LOP_COMMA  shift, and go to state 140

    $default  reduce using rule 83 (structdeclstmt)


State 104

   90 structinitlist: structinititem .

    $default  reduce using rule 90 (structinitlist)


State 105

   88 structdecitem: AutT decl SEMICOLON .

    $default  reduce using rule 88 (structdecitem)


State 106

   89 structdecitem: AutT funcdef SEMICOLON .

    $default  reduce using rule 89 (structdecitem)


State 107

   55 PrimaryExp: IDENTIFIER LOP_POINT IDENTIFIER .

    $default  reduce using rule 55 (PrimaryExp)


State 108

   66 MulExp: MulExp MulOp UnaryExp .

    $default  reduce using rule 66 (MulExp)


State 109

   66 MulExp: MulExp . MulOp UnaryExp
   69 AddExp: AddExp LOP_MINUS MulExp .

    LOP_MUL  shift, and go to state 82
    LOP_DIV  shift, and go to state 83
    LOP_MOD  shift, and go to state 84

    $default  reduce using rule 69 (AddExp)

    MulOp  go to state 85


State 110

   66 MulExp: MulExp . MulOp UnaryExp
   68 AddExp: AddExp LOP_PLUS MulExp .

    LOP_MUL  shift, and go to state 82
    LOP_DIV  shift, and go to state 83
    LOP_MOD  shift, and go to state 84

    $default  reduce using rule 68 (AddExp)

    MulOp  go to state 85


State 111

   68 AddExp: AddExp . LOP_PLUS MulExp
   69       | AddExp . LOP_MINUS MulExp
   71 RelExp: RelExp RelOp AddExp .

    LOP_MINUS  shift, and go to state 86
    LOP_PLUS   shift, and go to state 87

    $default  reduce using rule 71 (RelExp)


State 112

   71 RelExp: RelExp . RelOp AddExp
   73 EqExp: EqExp EqOp RelExp .

    LOP_LESS  shift, and go to state 88
    LOP_GREA  shift, and go to state 89
    LOP_LE    shift, and go to state 90
    LOP_GE    shift, and go to state 91

    $default  reduce using rule 73 (EqExp)

    RelOp  go to state 92


State 113

   73 EqExp: EqExp . EqOp RelExp
   75 LandExp: LandExp LOP_LAND EqExp .

    LOP_EEQ  shift, and go to state 93
    LOP_NEQ  shift, and go to state 94

    $default  reduce using rule 75 (LandExp)

    EqOp  go to state 95


State 114

   75 LandExp: LandExp . LOP_LAND EqExp
   77 LorExp: LorExp LOP_LOR LandExp .

    LOP_LAND  shift, and go to state 96

    $default  reduce using rule 77 (LorExp)


State 115

   19 funcdef: T IDENTIFIER LOP_LPAREN funcparams LOP_RPAREN block .

    $default  reduce using rule 19 (funcdef)


State 116

   51 ifstmt: KEY_IF . LOP_LPAREN CommaExp LOP_RPAREN statement
   52       | KEY_IF . LOP_LPAREN CommaExp LOP_RPAREN statement KEY_ELSE statement

    LOP_LPAREN  shift, and go to state 141


State 117

   46 forstmt: KEY_FOR . LOP_LPAREN vardeclstmt SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN statement
   47        | KEY_FOR . LOP_LPAREN assignstmt SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN statement

    LOP_LPAREN  shift, and go to state 142


State 118

   50 whilestmt: KEY_WHILE . LOP_LPAREN CommaExp LOP_RPAREN statement

    LOP_LPAREN  shift, and go to state 143


State 119

   37 statement: KEY_CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 144


State 120

   36 statement: KEY_BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 145


State 121

   48 returnstmt: KEY_RETURN .
   49           | KEY_RETURN . CommaExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    $default  reduce using rule 48 (returnstmt)

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 146
    CommaExp    go to state 147
    INTEGER     go to state 65


State 122

   42 scanfstmt: KEY_SCANF . LOP_LPAREN STRING LOP_COMMA spflist LOP_RPAREN

    LOP_LPAREN  shift, and go to state 148


State 123

   43 printfstmt: KEY_PRINTF . LOP_LPAREN STRING LOP_COMMA spflist LOP_RPAREN

    LOP_LPAREN  shift, and go to state 149


State 124

   30 statement: SEMICOLON .

    $default  reduce using rule 30 (statement)


State 125

   59 LValExp: IDENTIFIER .
   60        | IDENTIFIER . LOP_POINT IDENTIFIER

    LOP_POINT  shift, and go to state 150

    $default  reduce using rule 59 (LValExp)


State 126

   26 blocklist: decl . SEMICOLON

    SEMICOLON  shift, and go to state 151


State 127

   38 statement: assignstmt . SEMICOLON

    SEMICOLON  shift, and go to state 152


State 128

   31 statement: block .

    $default  reduce using rule 31 (statement)


State 129

   25 block: LOP_LBRACE blocklist . LOP_RBRACE
   28 blocklist: blocklist . decl SEMICOLON
   29          | blocklist . statement

    T_CHAR        shift, and go to state 1
    T_INT         shift, and go to state 2
    T_STRING      shift, and go to state 3
    T_BOOL        shift, and go to state 4
    KEY_IF        shift, and go to state 116
    KEY_FOR       shift, and go to state 117
    KEY_WHILE     shift, and go to state 118
    KEY_CONTINUE  shift, and go to state 119
    KEY_BREAK     shift, and go to state 120
    KEY_RETURN    shift, and go to state 121
    KEY_SCANF     shift, and go to state 122
    KEY_PRINTF    shift, and go to state 123
    KEY_CONST     shift, and go to state 6
    KEY_STRUCT    shift, and go to state 7
    LOP_LBRACE    shift, and go to state 100
    LOP_RBRACE    shift, and go to state 153
    SEMICOLON     shift, and go to state 124
    IDENTIFIER    shift, and go to state 125

    decl            go to state 154
    constdeclstmt   go to state 12
    vardeclstmt     go to state 13
    assignstmt      go to state 127
    block           go to state 128
    statement       go to state 155
    funccall        go to state 131
    scanfstmt       go to state 132
    printfstmt      go to state 133
    forstmt         go to state 134
    returnstmt      go to state 135
    whilestmt       go to state 136
    ifstmt          go to state 137
    LValExp         go to state 138
    structdeclstmt  go to state 15
    T               go to state 139


State 130

   27 blocklist: statement .

    $default  reduce using rule 27 (blocklist)


State 131

   39 statement: funccall .

    $default  reduce using rule 39 (statement)


State 132

   40 funccall: scanfstmt . SEMICOLON

    SEMICOLON  shift, and go to state 156


State 133

   41 funccall: printfstmt . SEMICOLON

    SEMICOLON  shift, and go to state 157


State 134

   33 statement: forstmt .

    $default  reduce using rule 33 (statement)


State 135

   35 statement: returnstmt . SEMICOLON

    SEMICOLON  shift, and go to state 158


State 136

   34 statement: whilestmt .

    $default  reduce using rule 34 (statement)


State 137

   32 statement: ifstmt .

    $default  reduce using rule 32 (statement)


State 138

   17 assignstmt: LValExp . LOP_ASSIGN LorExp
   18           | LValExp . AssignEqOp LorExp

    LOP_ASSIGN   shift, and go to state 159
    LOP_PLUSEQ   shift, and go to state 160
    LOP_MINUSEQ  shift, and go to state 161
    LOP_MULEQ    shift, and go to state 162
    LOP_DIVEQ    shift, and go to state 163
    LOP_MODEQ    shift, and go to state 164

    AssignEqOp  go to state 165


State 139

   13 vardeclstmt: T . declareitem

    IDENTIFIER  shift, and go to state 32

    declareitem  go to state 26


State 140

   91 structinitlist: structinitlist LOP_COMMA . structinititem

    IDENTIFIER  shift, and go to state 102

    $default  reduce using rule 93 (structinititem)

    structinititem  go to state 166


State 141

   51 ifstmt: KEY_IF LOP_LPAREN . CommaExp LOP_RPAREN statement
   52       | KEY_IF LOP_LPAREN . CommaExp LOP_RPAREN statement KEY_ELSE statement

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 146
    CommaExp    go to state 167
    INTEGER     go to state 65


State 142

   46 forstmt: KEY_FOR LOP_LPAREN . vardeclstmt SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN statement
   47        | KEY_FOR LOP_LPAREN . assignstmt SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN statement

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    IDENTIFIER  shift, and go to state 125

    vardeclstmt  go to state 168
    assignstmt   go to state 169
    LValExp      go to state 138
    T            go to state 139


State 143

   50 whilestmt: KEY_WHILE LOP_LPAREN . CommaExp LOP_RPAREN statement

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 146
    CommaExp    go to state 170
    INTEGER     go to state 65


State 144

   37 statement: KEY_CONTINUE SEMICOLON .

    $default  reduce using rule 37 (statement)


State 145

   36 statement: KEY_BREAK SEMICOLON .

    $default  reduce using rule 36 (statement)


State 146

   77 LorExp: LorExp . LOP_LOR LandExp
   78 CommaExp: LorExp .

    LOP_LOR  shift, and go to state 97

    $default  reduce using rule 78 (CommaExp)


State 147

   49 returnstmt: KEY_RETURN CommaExp .
   79 CommaExp: CommaExp . LOP_COMMA LorExp

    LOP_COMMA  shift, and go to state 171

    $default  reduce using rule 49 (returnstmt)


State 148

   42 scanfstmt: KEY_SCANF LOP_LPAREN . STRING LOP_COMMA spflist LOP_RPAREN

    STRING  shift, and go to state 172


State 149

   43 printfstmt: KEY_PRINTF LOP_LPAREN . STRING LOP_COMMA spflist LOP_RPAREN

    STRING  shift, and go to state 173


State 150

   60 LValExp: IDENTIFIER LOP_POINT . IDENTIFIER

    IDENTIFIER  shift, and go to state 174


State 151

   26 blocklist: decl SEMICOLON .

    $default  reduce using rule 26 (blocklist)


State 152

   38 statement: assignstmt SEMICOLON .

    $default  reduce using rule 38 (statement)


State 153

   25 block: LOP_LBRACE blocklist LOP_RBRACE .

    $default  reduce using rule 25 (block)


State 154

   28 blocklist: blocklist decl . SEMICOLON

    SEMICOLON  shift, and go to state 175


State 155

   29 blocklist: blocklist statement .

    $default  reduce using rule 29 (blocklist)


State 156

   40 funccall: scanfstmt SEMICOLON .

    $default  reduce using rule 40 (funccall)


State 157

   41 funccall: printfstmt SEMICOLON .

    $default  reduce using rule 41 (funccall)


State 158

   35 statement: returnstmt SEMICOLON .

    $default  reduce using rule 35 (statement)


State 159

   17 assignstmt: LValExp LOP_ASSIGN . LorExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 176
    INTEGER     go to state 65


State 160

  109 AssignEqOp: LOP_PLUSEQ .

    $default  reduce using rule 109 (AssignEqOp)


State 161

  110 AssignEqOp: LOP_MINUSEQ .

    $default  reduce using rule 110 (AssignEqOp)


State 162

  112 AssignEqOp: LOP_MULEQ .

    $default  reduce using rule 112 (AssignEqOp)


State 163

  113 AssignEqOp: LOP_DIVEQ .

    $default  reduce using rule 113 (AssignEqOp)


State 164

  111 AssignEqOp: LOP_MODEQ .

    $default  reduce using rule 111 (AssignEqOp)


State 165

   18 assignstmt: LValExp AssignEqOp . LorExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 177
    INTEGER     go to state 65


State 166

   91 structinitlist: structinitlist LOP_COMMA structinititem .

    $default  reduce using rule 91 (structinitlist)


State 167

   51 ifstmt: KEY_IF LOP_LPAREN CommaExp . LOP_RPAREN statement
   52       | KEY_IF LOP_LPAREN CommaExp . LOP_RPAREN statement KEY_ELSE statement
   79 CommaExp: CommaExp . LOP_COMMA LorExp

    LOP_COMMA   shift, and go to state 171
    LOP_RPAREN  shift, and go to state 178


State 168

   14 vardeclstmt: vardeclstmt . LOP_COMMA declareitem
   46 forstmt: KEY_FOR LOP_LPAREN vardeclstmt . SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN statement

    LOP_COMMA  shift, and go to state 24
    SEMICOLON  shift, and go to state 179


State 169

   47 forstmt: KEY_FOR LOP_LPAREN assignstmt . SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN statement

    SEMICOLON  shift, and go to state 180


State 170

   50 whilestmt: KEY_WHILE LOP_LPAREN CommaExp . LOP_RPAREN statement
   79 CommaExp: CommaExp . LOP_COMMA LorExp

    LOP_COMMA   shift, and go to state 171
    LOP_RPAREN  shift, and go to state 181


State 171

   79 CommaExp: CommaExp LOP_COMMA . LorExp

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 182
    INTEGER     go to state 65


State 172

   42 scanfstmt: KEY_SCANF LOP_LPAREN STRING . LOP_COMMA spflist LOP_RPAREN

    LOP_COMMA  shift, and go to state 183


State 173

   43 printfstmt: KEY_PRINTF LOP_LPAREN STRING . LOP_COMMA spflist LOP_RPAREN

    LOP_COMMA  shift, and go to state 184


State 174

   60 LValExp: IDENTIFIER LOP_POINT IDENTIFIER .

    $default  reduce using rule 60 (LValExp)


State 175

   28 blocklist: blocklist decl SEMICOLON .

    $default  reduce using rule 28 (blocklist)


State 176

   17 assignstmt: LValExp LOP_ASSIGN LorExp .
   77 LorExp: LorExp . LOP_LOR LandExp

    LOP_LOR  shift, and go to state 97

    $default  reduce using rule 17 (assignstmt)


State 177

   18 assignstmt: LValExp AssignEqOp LorExp .
   77 LorExp: LorExp . LOP_LOR LandExp

    LOP_LOR  shift, and go to state 97

    $default  reduce using rule 18 (assignstmt)


State 178

   51 ifstmt: KEY_IF LOP_LPAREN CommaExp LOP_RPAREN . statement
   52       | KEY_IF LOP_LPAREN CommaExp LOP_RPAREN . statement KEY_ELSE statement

    KEY_IF        shift, and go to state 116
    KEY_FOR       shift, and go to state 117
    KEY_WHILE     shift, and go to state 118
    KEY_CONTINUE  shift, and go to state 119
    KEY_BREAK     shift, and go to state 120
    KEY_RETURN    shift, and go to state 121
    KEY_SCANF     shift, and go to state 122
    KEY_PRINTF    shift, and go to state 123
    LOP_LBRACE    shift, and go to state 100
    SEMICOLON     shift, and go to state 124
    IDENTIFIER    shift, and go to state 125

    assignstmt  go to state 127
    block       go to state 128
    statement   go to state 185
    funccall    go to state 131
    scanfstmt   go to state 132
    printfstmt  go to state 133
    forstmt     go to state 134
    returnstmt  go to state 135
    whilestmt   go to state 136
    ifstmt      go to state 137
    LValExp     go to state 138


State 179

   46 forstmt: KEY_FOR LOP_LPAREN vardeclstmt SEMICOLON . CommaExp SEMICOLON assignstmt LOP_RPAREN statement

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 146
    CommaExp    go to state 186
    INTEGER     go to state 65


State 180

   47 forstmt: KEY_FOR LOP_LPAREN assignstmt SEMICOLON . CommaExp SEMICOLON assignstmt LOP_RPAREN statement

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 146
    CommaExp    go to state 187
    INTEGER     go to state 65


State 181

   50 whilestmt: KEY_WHILE LOP_LPAREN CommaExp LOP_RPAREN . statement

    KEY_IF        shift, and go to state 116
    KEY_FOR       shift, and go to state 117
    KEY_WHILE     shift, and go to state 118
    KEY_CONTINUE  shift, and go to state 119
    KEY_BREAK     shift, and go to state 120
    KEY_RETURN    shift, and go to state 121
    KEY_SCANF     shift, and go to state 122
    KEY_PRINTF    shift, and go to state 123
    LOP_LBRACE    shift, and go to state 100
    SEMICOLON     shift, and go to state 124
    IDENTIFIER    shift, and go to state 125

    assignstmt  go to state 127
    block       go to state 128
    statement   go to state 188
    funccall    go to state 131
    scanfstmt   go to state 132
    printfstmt  go to state 133
    forstmt     go to state 134
    returnstmt  go to state 135
    whilestmt   go to state 136
    ifstmt      go to state 137
    LValExp     go to state 138


State 182

   77 LorExp: LorExp . LOP_LOR LandExp
   79 CommaExp: CommaExp LOP_COMMA LorExp .

    LOP_LOR  shift, and go to state 97

    $default  reduce using rule 79 (CommaExp)


State 183

   42 scanfstmt: KEY_SCANF LOP_LPAREN STRING LOP_COMMA . spflist LOP_RPAREN

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    spflist     go to state 189
    expr        go to state 190
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 64
    INTEGER     go to state 65


State 184

   43 printfstmt: KEY_PRINTF LOP_LPAREN STRING LOP_COMMA . spflist LOP_RPAREN

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    spflist     go to state 191
    expr        go to state 190
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 64
    INTEGER     go to state 65


State 185

   51 ifstmt: KEY_IF LOP_LPAREN CommaExp LOP_RPAREN statement .
   52       | KEY_IF LOP_LPAREN CommaExp LOP_RPAREN statement . KEY_ELSE statement

    KEY_ELSE  shift, and go to state 192

    KEY_ELSE  [reduce using rule 51 (ifstmt)]
    $default  reduce using rule 51 (ifstmt)


State 186

   46 forstmt: KEY_FOR LOP_LPAREN vardeclstmt SEMICOLON CommaExp . SEMICOLON assignstmt LOP_RPAREN statement
   79 CommaExp: CommaExp . LOP_COMMA LorExp

    LOP_COMMA  shift, and go to state 171
    SEMICOLON  shift, and go to state 193


State 187

   47 forstmt: KEY_FOR LOP_LPAREN assignstmt SEMICOLON CommaExp . SEMICOLON assignstmt LOP_RPAREN statement
   79 CommaExp: CommaExp . LOP_COMMA LorExp

    LOP_COMMA  shift, and go to state 171
    SEMICOLON  shift, and go to state 194


State 188

   50 whilestmt: KEY_WHILE LOP_LPAREN CommaExp LOP_RPAREN statement .

    $default  reduce using rule 50 (whilestmt)


State 189

   42 scanfstmt: KEY_SCANF LOP_LPAREN STRING LOP_COMMA spflist . LOP_RPAREN
   45 spflist: spflist . LOP_COMMA expr

    LOP_COMMA   shift, and go to state 195
    LOP_RPAREN  shift, and go to state 196


State 190

   44 spflist: expr .

    $default  reduce using rule 44 (spflist)


State 191

   43 printfstmt: KEY_PRINTF LOP_LPAREN STRING LOP_COMMA spflist . LOP_RPAREN
   45 spflist: spflist . LOP_COMMA expr

    LOP_COMMA   shift, and go to state 195
    LOP_RPAREN  shift, and go to state 197


State 192

   52 ifstmt: KEY_IF LOP_LPAREN CommaExp LOP_RPAREN statement KEY_ELSE . statement

    KEY_IF        shift, and go to state 116
    KEY_FOR       shift, and go to state 117
    KEY_WHILE     shift, and go to state 118
    KEY_CONTINUE  shift, and go to state 119
    KEY_BREAK     shift, and go to state 120
    KEY_RETURN    shift, and go to state 121
    KEY_SCANF     shift, and go to state 122
    KEY_PRINTF    shift, and go to state 123
    LOP_LBRACE    shift, and go to state 100
    SEMICOLON     shift, and go to state 124
    IDENTIFIER    shift, and go to state 125

    assignstmt  go to state 127
    block       go to state 128
    statement   go to state 198
    funccall    go to state 131
    scanfstmt   go to state 132
    printfstmt  go to state 133
    forstmt     go to state 134
    returnstmt  go to state 135
    whilestmt   go to state 136
    ifstmt      go to state 137
    LValExp     go to state 138


State 193

   46 forstmt: KEY_FOR LOP_LPAREN vardeclstmt SEMICOLON CommaExp SEMICOLON . assignstmt LOP_RPAREN statement

    IDENTIFIER  shift, and go to state 125

    assignstmt  go to state 199
    LValExp     go to state 138


State 194

   47 forstmt: KEY_FOR LOP_LPAREN assignstmt SEMICOLON CommaExp SEMICOLON . assignstmt LOP_RPAREN statement

    IDENTIFIER  shift, and go to state 125

    assignstmt  go to state 200
    LValExp     go to state 138


State 195

   45 spflist: spflist LOP_COMMA . expr

    LOP_MINUS    shift, and go to state 47
    LOP_PLUS     shift, and go to state 48
    LOP_NOT      shift, and go to state 49
    IDENTIFIER   shift, and go to state 50
    HEX_INTEGER  shift, and go to state 51
    DEC_INTEGER  shift, and go to state 52
    OCT_INTEGER  shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55

    expr        go to state 201
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    MulExp      go to state 59
    AddExp      go to state 60
    RelExp      go to state 61
    EqExp       go to state 62
    LandExp     go to state 63
    LorExp      go to state 64
    INTEGER     go to state 65


State 196

   42 scanfstmt: KEY_SCANF LOP_LPAREN STRING LOP_COMMA spflist LOP_RPAREN .

    $default  reduce using rule 42 (scanfstmt)


State 197

   43 printfstmt: KEY_PRINTF LOP_LPAREN STRING LOP_COMMA spflist LOP_RPAREN .

    $default  reduce using rule 43 (printfstmt)


State 198

   52 ifstmt: KEY_IF LOP_LPAREN CommaExp LOP_RPAREN statement KEY_ELSE statement .

    $default  reduce using rule 52 (ifstmt)


State 199

   46 forstmt: KEY_FOR LOP_LPAREN vardeclstmt SEMICOLON CommaExp SEMICOLON assignstmt . LOP_RPAREN statement

    LOP_RPAREN  shift, and go to state 202


State 200

   47 forstmt: KEY_FOR LOP_LPAREN assignstmt SEMICOLON CommaExp SEMICOLON assignstmt . LOP_RPAREN statement

    LOP_RPAREN  shift, and go to state 203


State 201

   45 spflist: spflist LOP_COMMA expr .

    $default  reduce using rule 45 (spflist)


State 202

   46 forstmt: KEY_FOR LOP_LPAREN vardeclstmt SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN . statement

    KEY_IF        shift, and go to state 116
    KEY_FOR       shift, and go to state 117
    KEY_WHILE     shift, and go to state 118
    KEY_CONTINUE  shift, and go to state 119
    KEY_BREAK     shift, and go to state 120
    KEY_RETURN    shift, and go to state 121
    KEY_SCANF     shift, and go to state 122
    KEY_PRINTF    shift, and go to state 123
    LOP_LBRACE    shift, and go to state 100
    SEMICOLON     shift, and go to state 124
    IDENTIFIER    shift, and go to state 125

    assignstmt  go to state 127
    block       go to state 128
    statement   go to state 204
    funccall    go to state 131
    scanfstmt   go to state 132
    printfstmt  go to state 133
    forstmt     go to state 134
    returnstmt  go to state 135
    whilestmt   go to state 136
    ifstmt      go to state 137
    LValExp     go to state 138


State 203

   47 forstmt: KEY_FOR LOP_LPAREN assignstmt SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN . statement

    KEY_IF        shift, and go to state 116
    KEY_FOR       shift, and go to state 117
    KEY_WHILE     shift, and go to state 118
    KEY_CONTINUE  shift, and go to state 119
    KEY_BREAK     shift, and go to state 120
    KEY_RETURN    shift, and go to state 121
    KEY_SCANF     shift, and go to state 122
    KEY_PRINTF    shift, and go to state 123
    LOP_LBRACE    shift, and go to state 100
    SEMICOLON     shift, and go to state 124
    IDENTIFIER    shift, and go to state 125

    assignstmt  go to state 127
    block       go to state 128
    statement   go to state 205
    funccall    go to state 131
    scanfstmt   go to state 132
    printfstmt  go to state 133
    forstmt     go to state 134
    returnstmt  go to state 135
    whilestmt   go to state 136
    ifstmt      go to state 137
    LValExp     go to state 138


State 204

   46 forstmt: KEY_FOR LOP_LPAREN vardeclstmt SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN statement .

    $default  reduce using rule 46 (forstmt)


State 205

   47 forstmt: KEY_FOR LOP_LPAREN assignstmt SEMICOLON CommaExp SEMICOLON assignstmt LOP_RPAREN statement .

    $default  reduce using rule 47 (forstmt)
