Lno@0       @0 NODE_PROG children:[@1 @6 ] vars:[a main ] 
Lno@14       @1 NODE_STMT children:[@2 @3 ] STMT_DECL_VAR 
Lno@14       @2 NODE_TYPE  int 
Lno@14       @3 NODE_ITEM children:[@4 @5 ] ITEM_DECL
Lno@14       @4 NODE_VAR  variable_name: a 
Lno@14       @5 NODE_CONST  1 
Lno@14       @6 NODE_FUNC children:[@7 @8 @9 ]  func_name: main
Lno@15       @7 NODE_VAR  variable_name: main 
Lno@15       @8 NODE_LIST children:[] 
Lno@16       @9 NODE_STMT children:[@10 @15 ] STMT: block {}  vars:[a ] 
Lno@16       @10 NODE_STMT children:[@11 @12 ] STMT_DECL_VAR 
Lno@16       @11 NODE_TYPE  int 
Lno@16       @12 NODE_ITEM children:[@13 @14 ] ITEM_DECL
Lno@16       @13 NODE_VAR  variable_name: a 
Lno@16       @14 NODE_CONST  0 
Lno@17       @15 NODE_STMT children:[@16 @19 @24 ] STMT: ifelse 
Lno@17       @16 NODE_EXPR children:[@17 @18 ] optype: == 
Lno@17       @17 NODE_VAR  variable_name: a 
Lno@17       @18 NODE_CONST  0 
Lno@18       @19 NODE_STMT children:[@20 ] STMT: block {}  vars:[] 
Lno@18       @20 NODE_EXPR children:[@21 @23 ] optype: += 
Lno@18       @21 NODE_EXPR children:[@22 ] optype: lval expr 
Lno@18       @22 NODE_VAR  variable_name: a 
Lno@18       @23 NODE_CONST  1 
Lno@22       @24 NODE_STMT children:[@25 ] STMT: block {}  vars:[] 
Lno@22       @25 NODE_EXPR children:[@26 @28 ] optype: += 
Lno@22       @26 NODE_EXPR children:[@27 ] optype: lval expr 
Lno@22       @27 NODE_VAR  variable_name: a 
Lno@22       @28 NODE_CONST  2 
